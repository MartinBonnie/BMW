package com.zwrx.bmw.models;

// Generated 2011-4-16 16:53:44 by Hibernate Tools 3.3.0.GA

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import org.hibernate.annotations.GenericGenerator;
import com.zwrx.bmw.common.CommonConst;
import com.zwrx.bmw.common.ConfConst;
import com.zwrx.bmw.util.StringUtil;


/**
 * NgbAttachment generated by hbm2java
 */
@Entity
@Table(name = "bmw_attachment")
public class BmwAttachment implements java.io.Serializable {

	private String attId;
	private String bmwUserId;
	private String belongType;
	private String belongId;
	private String type;
	private String state;
	private String storeType;
	private String serverIp;
	private String serverPath;
	private String filename;
	private String filedesc;
	private String content;
	private Date uploadTime;
	private BigDecimal fileSize;
	

	public BmwAttachment() {
	}

	public BmwAttachment(String attId) {
		this.attId = attId;
	}

	@Id
	@Column(name = "att_id", unique = true, nullable = false, length = 32)
	@GenericGenerator(name="idGenerator", strategy="uuid")
	@GeneratedValue(generator="idGenerator")
	public String getAttId() {
		return this.attId;
	}

	public void setAttId(String attId) {
		this.attId = attId;
	}

	@Column(name = "user_id", length = 32)
	public String getBmwUserId() {
		return this.bmwUserId;
	}

	public void setBmwUserId(String bmwUserId) {
		this.bmwUserId = bmwUserId;
	}
	
	@Column(name = "belong_type", length = 2)
	public String getBelongType() {
		return this.belongType;
	}

	public void setBelongType(String belongType) {
		this.belongType = belongType;
	}

	@Column(name = "belong_id", length = 32)
	public String getBelongId() {
		return this.belongId;
	}

	public void setBelongId(String belongId) {
		this.belongId = belongId;
	}

	@Column(name = "type", length = 2)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "state", length = 2)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "store_type", length = 2)
	public String getStoreType() {
		return this.storeType;
	}

	public void setStoreType(String storeType) {
		this.storeType = storeType;
	}

	@Column(name = "server_ip", length = 100)
	public String getServerIp() {
		return this.serverIp;
	}

	public void setServerIp(String serverIp) {
		this.serverIp = serverIp;
	}

	@Column(name = "server_path", length = 400)
	public String getServerPath() {
		return this.serverPath;
	}

	public void setServerPath(String serverPath) {
		this.serverPath = serverPath;
	}

	@Column(name = "filename", length = 100)
	public String getFilename() {
		return this.filename;
	}

	public void setFilename(String filename) {
		this.filename = filename;
	}

	@Column(name = "filedesc", length = 200)
	public String getFiledesc() {
		return this.filedesc;
	}

	public void setFiledesc(String filedesc) {
		this.filedesc = filedesc;
	}

	@Column(name = "content", length = 65535)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}
	
	@Column(name = "file_size", precision = 10, scale = 4)
	public BigDecimal getFileSize() {
		return fileSize;
	}

	public void setFileSize(BigDecimal fileSize) {
		this.fileSize = fileSize;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "upload_time", length = 19)
	public Date getUploadTime() {
		return this.uploadTime;
	}

	public void setUploadTime(Date uploadTime) {
		this.uploadTime = uploadTime;
	}

	
	@Transient
	public String getFileSvrPath(){
		if(StringUtil.isBlank(serverPath))
			return ConfConst.FILE_SVR+CommonConst.NO_PHOTO;
		else
		return ConfConst.FILE_SVR+serverPath;
	}
	/**
	 * 大图：700 中图350 小图160 微图 100 头像40
	 * @param i
	 * @return
	 */
	@Transient
	public String getServerPicUrl(int i) {
		if(StringUtil.isBlank(serverPath))
			return ConfConst.FILE_SVR+CommonConst.NO_PHOTO;
		else
		return ConfConst.FILE_SVR+serverPath.substring(0, serverPath.lastIndexOf("."))+ "_"+i+".jpg";
	}

}
